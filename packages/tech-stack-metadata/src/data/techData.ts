import type { TechCategory, TechMeta } from "@/src/techData";
import {
  BiLogoGraphql,
  BiLogoJquery,
  BiLogoMongodb,
  BiLogoNodejs,
  BiLogoPhp,
  BiLogoPostgresql,
  BiLogoTailwindCss,
  BiLogoTypescript,
} from "react-icons/bi";
import { FaJava } from "react-icons/fa";
import { GoIssueDraft } from "react-icons/go";
import { GrMysql } from "react-icons/gr";
import { RiSupabaseFill } from "react-icons/ri";
import {
  SiAirtable,
  SiAndroidstudio,
  SiAuth0,
  SiBlender,
  SiBootstrap,
  SiC,
  SiClerk,
  SiCplusplus,
  SiCss3,
  SiDocker,
  SiExpress,
  SiFastapi,
  SiFirebase,
  SiFlask,
  SiGit,
  SiGnubash,
  SiGreensock,
  SiHasura,
  SiHtml5,
  SiInsomnia,
  SiJavascript,
  SiKalilinux,
  SiKubernetes,
  SiMariadb,
  SiMetasploit,
  SiNestjs,
  SiNextdotjs,
  SiNotion,
  SiPostman,
  SiPrisma,
  SiPython,
  SiReact,
  SiRedis,
  SiShadcnui,
  SiSlack,
  SiSwagger,
  SiTerraform,
  SiThreedotjs,
  SiTrpc,
  SiUbuntu,
  SiUnrealengine,
  SiVagrant,
  SiVite,
  SiWebstorm,
  SiWireshark,
} from "react-icons/si";
import { TbBrandReactNative } from "react-icons/tb";
import { VscCode } from "react-icons/vsc";

export const TechData = {
  // Languages
  TYPESCRIPT: {
    key: "typescript",
    name: "TypeScript",
    url: "https://www.typescriptlang.org/",
    icon: BiLogoTypescript,
    category: ["language", "frontend", "backend"],
    aliases: ["TS", "JavaScript with Types"],
  },
  JAVASCRIPT: {
    key: "javascript",
    name: "JavaScript",
    url: "https://developer.mozilla.org/en-US/docs/Web/JavaScript",
    icon: SiJavascript,
    category: ["language", "frontend", "backend"],
    aliases: ["JS", "ECMAScript"],
  },
  PYTHON: {
    key: "python",
    name: "Python",
    url: "https://www.python.org/",
    icon: SiPython,
    category: ["language", "backend"],
    aliases: ["py"],
  },
  JAVA: {
    key: "java",
    name: "Java",
    url: "https://www.java.com/en/",
    icon: FaJava,
    category: ["language", "backend"],
    aliases: [],
  },
  C: {
    key: "c",
    name: "C",
    url: "https://www.learn-c.org/",
    icon: SiC,
    category: ["language"],
    aliases: ["C Language", "C Programming"],
  },
  CPP: {
    key: "cpp",
    name: "C++",
    url: "https://www.cplusplus.com/",
    icon: SiCplusplus,
    category: ["language"],
    aliases: ["C Plus Plus"],
  },
  PHP: {
    key: "php",
    name: "PHP",
    url: "https://www.php.net/",
    icon: BiLogoPhp,
    category: ["language", "backend"],
    aliases: ["PHP Hypertext Preprocessor"],
  },
  HTML: {
    key: "html",
    name: "HTML",
    url: "https://developer.mozilla.org/en-US/docs/Web/HTML",
    icon: SiHtml5,
    category: ["language", "frontend"],
    aliases: ["HTML5", "Markup Language"],
  },
  CSS: {
    key: "css",
    name: "CSS",
    url: "https://developer.mozilla.org/en-US/docs/Web/CSS",
    icon: SiCss3,
    category: ["language", "frontend"],
    aliases: ["CSS3", "Stylesheets"],
  },
  BASH_SCRIPTING: {
    key: "bash_scripting",
    name: "Bash Scripting",
    url: "https://www.gnu.org/software/bash/",
    icon: SiGnubash,
    category: ["language", "devops", "tool"],
    aliases: ["Shell Scripting", "Terminal Scripts"],
  },

  // Frameworks and Libraries - Frontend
  REACT_JS: {
    key: "react_js",
    name: "React",
    url: "https://reactjs.org/",
    icon: SiReact,
    category: ["framework", "library", "frontend"],
    aliases: ["React.js", "ReactJS"],
  },
  REACT_NATIVE: {
    key: "react_native",
    name: "React Native",
    url: "https://reactnative.dev/",
    icon: TbBrandReactNative,
    category: ["framework", "frontend", "platform"],
    aliases: ["RN", "Mobile Development"],
  },
  NEXT_JS: {
    key: "next_js",
    name: "Next.js",
    url: "https://nextjs.org/",
    icon: SiNextdotjs,
    category: ["framework", "frontend", "backend"],
    aliases: ["NextJS", "Next", "React Framework"],
  },
  TAILWIND_CSS: {
    key: "tailwind_css",
    name: "Tailwind CSS",
    url: "https://tailwindcss.com/",
    icon: BiLogoTailwindCss,
    category: ["library", "frontend", "design"],
    aliases: ["Tailwind", "TailwindCSS", "Utility CSS"],
  },
  BOOTSTRAP: {
    key: "bootstrap",
    name: "Bootstrap",
    url: "https://getbootstrap.com/",
    icon: SiBootstrap,
    category: ["library", "frontend", "design"],
    aliases: ["BS", "Twitter Bootstrap"],
  },
  JQUERY: {
    key: "jquery",
    name: "jQuery",
    url: "https://jquery.com/",
    icon: BiLogoJquery,
    category: ["library", "frontend"],
    aliases: ["JS Library"],
  },
  THREE_JS: {
    key: "three_js",
    name: "Three.js",
    url: "https://threejs.org/",
    icon: SiThreedotjs,
    category: ["library", "frontend"],
    aliases: ["3D Graphics", "WebGL"],
  },
  GSAP: {
    key: "gsap",
    name: "GSAP",
    url: "https://greensock.com/gsap/",
    icon: SiGreensock,
    category: ["library", "frontend", "design"],
    aliases: ["GreenSock", "Animation Platform"],
  },
  SHAD_CN: {
    key: "shad_cn",
    name: "shadcn/ui",
    url: "https://ui.shadcn.com/",
    icon: SiShadcnui,
    category: ["library", "frontend", "design"],
    aliases: ["Shadcn UI", "UI Components"],
  },
  VITE: {
    key: "vite",
    name: "Vite",
    url: "https://vitejs.dev/",
    icon: SiVite,
    category: ["tool", "frontend"],
    aliases: ["Vite.js", "Build Tool"],
  },

  // Frameworks and Libraries - Backend
  NODE_JS: {
    key: "node_js",
    name: "Node.js",
    url: "https://nodejs.org/en/",
    icon: BiLogoNodejs,
    category: ["platform", "backend"],
    aliases: ["NodeJS", "Node", "JavaScript Runtime"],
  },
  EXPRESS: {
    key: "express",
    name: "Express.js",
    url: "https://expressjs.com/",
    icon: SiExpress,
    category: ["framework", "backend"],
    aliases: ["Express", "Node.js Framework"],
  },
  NEST_JS: {
    key: "nest_js",
    name: "NestJS",
    url: "https://nestjs.com/",
    icon: SiNestjs,
    category: ["framework", "backend"],
    aliases: ["Nest", "Node.js Framework"],
  },
  FLASK: {
    key: "flask",
    name: "Flask",
    url: "https://flask.palletsprojects.com/",
    icon: SiFlask,
    category: ["framework", "backend"],
    aliases: ["Python Framework"],
  },
  FASTAPI: {
    key: "fastapi",
    name: "FastAPI",
    url: "https://fastapi.tiangolo.com/",
    icon: SiFastapi,
    category: ["framework", "backend"],
    aliases: ["Fast API", "Python API Framework"],
  },

  // Databases
  MONGODB: {
    key: "mongodb",
    name: "MongoDB",
    url: "https://www.mongodb.com/",
    icon: BiLogoMongodb,
    category: ["database", "backend"],
    aliases: ["Mongo", "NoSQL Database"],
  },
  POSTGRESQL: {
    key: "postgresql",
    name: "PostgreSQL",
    url: "https://www.postgresql.org/",
    icon: BiLogoPostgresql,
    category: ["database", "backend"],
    aliases: ["Postgres", "SQL Database"],
  },
  MYSQL: {
    key: "mysql",
    name: "MySQL",
    url: "https://www.mysql.com/",
    icon: GrMysql,
    category: ["database", "backend"],
    aliases: ["SQL Database"],
  },
  MARIADB: {
    key: "mariadb",
    name: "MariaDB",
    url: "https://mariadb.org/",
    icon: SiMariadb,
    category: ["database", "backend"],
    aliases: ["MySQL Fork", "SQL Database"],
  },
  REDIS: {
    key: "redis",
    name: "Redis",
    url: "https://redis.io/",
    icon: SiRedis,
    category: ["database", "backend"],
    aliases: ["In-Memory Database", "Cache"],
  },
  AIRTABLE: {
    key: "airtable",
    name: "Airtable",
    url: "https://airtable.com/",
    icon: SiAirtable,
    category: ["database", "tool"],
    aliases: ["Spreadsheet Database"],
  },

  // APIs & Data Management
  GRAPHQL: {
    key: "graphql",
    name: "GraphQL",
    url: "https://graphql.org/",
    icon: BiLogoGraphql,
    category: ["language", "backend", "tool"],
    aliases: ["GQL", "API Query Language"],
  },
  TRPC: {
    key: "trpc",
    name: "tRPC",
    url: "https://trpc.io/",
    icon: SiTrpc,
    category: ["library", "backend", "frontend", "tool"],
    aliases: ["TypeScript RPC", "API Framework"],
  },
  PRISMA: {
    key: "prisma",
    name: "Prisma",
    url: "https://www.prisma.io/",
    icon: SiPrisma,
    category: ["library", "database", "backend", "tool"],
    aliases: ["ORM", "Database Toolkit"],
  },
  HASURA: {
    key: "hasura",
    name: "Hasura",
    url: "https://hasura.io/",
    icon: SiHasura,
    category: ["tool", "backend", "database"],
    aliases: ["GraphQL Engine", "API Platform"],
  },
  SWAGGER: {
    key: "swagger",
    name: "Swagger",
    url: "https://swagger.io/",
    icon: SiSwagger,
    category: ["tool", "backend", "documentation"],
    aliases: ["OpenAPI", "API Documentation"],
  },

  // Authentication & BaaS
  CLERK: {
    key: "clerk",
    name: "Clerk",
    url: "https://clerk.dev/",
    icon: SiClerk,
    category: ["auth", "tool", "backend", "frontend"],
    aliases: ["Authentication", "User Management"],
  },
  NEXT_AUTH: {
    key: "next_auth",
    name: "NextAuth.js",
    url: "https://next-auth.js.org/",
    icon: SiAuth0,
    category: ["auth", "library", "backend"],
    aliases: ["NextAuth", "Authentication for Next.js"],
  },
  SUPABASE: {
    key: "supabase",
    name: "Supabase",
    url: "https://supabase.io/",
    icon: RiSupabaseFill,
    category: ["database", "backend", "auth", "platform"],
    aliases: ["Open Source Firebase Alternative", "BaaS"],
  },
  FIREBASE: {
    key: "firebase",
    name: "Firebase",
    url: "https://firebase.google.com/",
    icon: SiFirebase,
    category: ["database", "backend", "auth", "platform"],
    aliases: ["Google Firebase", "BaaS", "Cloud Services"],
  },

  // DevOps & Tools
  GIT: {
    key: "git",
    name: "Git",
    url: "https://git-scm.com/",
    icon: SiGit,
    category: ["tool", "devops"],
    aliases: ["Version Control", "VCS"],
  },
  POSTMAN: {
    key: "postman",
    name: "Postman",
    url: "https://www.postman.com/",
    icon: SiPostman,
    category: ["tool", "backend"],
    aliases: ["API Testing", "API Development"],
  },
  DOCKER: {
    key: "docker",
    name: "Docker",
    url: "https://www.docker.com/",
    icon: SiDocker,
    category: ["tool", "devops", "platform"],
    aliases: ["Containers", "Containerization"],
  },
  KUBERNETES: {
    key: "kubernetes",
    name: "Kubernetes",
    url: "https://kubernetes.io/",
    icon: SiKubernetes,
    category: ["tool", "devops", "platform"],
    aliases: ["K8s", "Container Orchestration"],
  },
  TERRAFORM: {
    key: "terraform",
    name: "Terraform",
    url: "https://www.terraform.io/",
    icon: SiTerraform,
    category: ["tool", "devops"],
    aliases: ["Infrastructure as Code", "IaC"],
  },

  // Security
  KALI_LINUX: {
    key: "kali_linux",
    name: "Kali Linux",
    url: "https://www.kali.org/",
    icon: SiKalilinux,
    category: ["platform", "security", "tool"],
    aliases: ["Penetration Testing OS"],
  },
  NMAP: {
    key: "nmap",
    name: "Nmap",
    url: "https://nmap.org/",
    icon: GoIssueDraft,
    category: ["security", "tool"],
    aliases: ["Network Mapper", "Port Scanner"],
  },
  METASPLOIT: {
    key: "metasploit",
    name: "Metasploit",
    url: "https://www.metasploit.com/",
    icon: SiMetasploit,
    category: ["security", "tool"],
    aliases: ["Penetration Testing", "Exploit Framework"],
  },
  WIRESHARK: {
    key: "wireshark",
    name: "Wireshark",
    url: "https://www.wireshark.org/",
    icon: SiWireshark,
    category: ["security", "tool"],
    aliases: ["Packet Analyzer", "Network Protocol Analyzer"],
  },
  AIRCRACK_NG: {
    key: "aircrack_ng",
    name: "Aircrack-ng",
    url: "https://www.aircrack-ng.org/",
    icon: GoIssueDraft,
    category: ["security", "tool"],
    aliases: ["WiFi Security", "Wireless Cracking"],
  },

  // Platforms & IDEs
  ANDROID_STUDIO: {
    key: "android_studio",
    name: "Android Studio",
    url: "https://developer.android.com/studio",
    icon: SiAndroidstudio,
    category: ["tool", "platform", "frontend"],
    aliases: ["Android IDE", "Mobile Development"],
  },

  // Design & 3D
  BLENDER: {
    key: "blender",
    name: "Blender",
    url: "https://www.blender.org/",
    icon: SiBlender,
    category: ["design", "tool"],
    aliases: ["3D Modeling", "Animation", "Rendering"],
  },
  UNREAL_ENGINE: {
    key: "unreal_engine",
    name: "Unreal Engine",
    url: "https://www.unrealengine.com/en-US",
    icon: SiUnrealengine,
    category: ["design", "tool", "platform"],
    aliases: ["UE", "Game Engine", "Real-time 3D"],
  },
  VAGRANT: {
    key: "vagrant",
    name: "Vagrant",
    url: "https://www.vagrantup.com/",
    icon: SiVagrant,
    category: ["tool", "devops"],
    aliases: ["Virtual Machine Management"],
  },
  WEBSTORM: {
    key: "webstorm",
    name: "WebStorm",
    url: "https://www.jetbrains.com/webstorm/",
    icon: SiWebstorm,
    category: ["tool", "frontend"],
    aliases: ["IDE", "JavaScript IDE"],
  },
  UBUNTU: {
    key: "ubuntu",
    name: "Ubuntu",
    url: "https://ubuntu.com/",
    icon: SiUbuntu,
    category: ["platform", "devops"],
    aliases: ["Linux Distribution", "Operating System"],
  },
  INSOMNIA: {
    key: "insomnia",
    name: "Insomnia",
    url: "https://insomnia.rest/",
    icon: SiInsomnia,
    category: ["tool", "backend"],
    aliases: ["API Client", "API Testing"],
  },
  VSCODE: {
    key: "vscode",
    name: "Visual Studio Code",
    url: "https://code.visualstudio.com/",
    icon: VscCode,
    category: ["tool", "frontend"],
    aliases: ["VSCode", "Code Editor"],
  },
  NOTION: {
    key: "notion",
    name: "Notion",
    url: "https://www.notion.so/",
    icon: SiNotion,
    category: ["tool", "documentation"],
    aliases: ["Productivity", "Note-taking"],
  },
  SLACK: {
    key: "slack",
    name: "Slack",
    url: "https://slack.com/",
    icon: SiSlack,
    category: ["tool", "documentation"],
    aliases: ["Team Communication", "Collaboration"],
  },
} satisfies Record<string, TechMeta>;

export type techKeys = keyof typeof TechData;

export function getTech(key: techKeys): TechMeta | undefined {
  return TechData[key] || undefined;
}

export function getTechByCategory(category: TechCategory): TechMeta[] {
  return Object.values(TechData).filter(tech =>
    tech.category.find(prev => prev === category),
  );
}

export function searchTech(query: string): TechMeta[] {
  const searchTerm = query.toLowerCase().trim();

  return Object.values(TechData).filter(tech =>
    tech.name.toLowerCase().includes(searchTerm)
    || tech.key.toLowerCase().includes(searchTerm)
    || tech.aliases?.some(alias => alias.toLowerCase().includes(searchTerm)),
  );
}
